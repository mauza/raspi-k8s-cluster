apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: storage
          mountPath: /var/lib/registry
        - name: htpasswd
          mountPath: /auth
          readOnly: true
        env:
        - name: REGISTRY_AUTH
          value: htpasswd
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: Docker Registry
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          value: /auth/htpasswd
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: docker-registry-pvc
      - name: htpasswd
        secret:
          secretName: docker-registry-htpasswd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
  namespace: docker
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-client
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
  namespace: docker
spec:
  selector:
    app: docker-registry
  ports:
    - protocol: TCP
      port: 5000
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: docker-mau-guru
  namespace: docker
spec:
  secretName: docker-mau-guru-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - docker.mau.guru
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: docker-registry-ingress-secure
  namespace: docker
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`docker.mau.guru`)
    kind: Rule
    services:
    - name: docker-registry-service
      port: 5000
  tls:
    secretName: docker-mau-guru-tls

